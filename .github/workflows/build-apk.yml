name: Build APKs

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ANDROID_SDK_ROOT: ${{ runner.tool_cache }}/android-sdk

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Install Android command-line tools
        run: |
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
          cd "$ANDROID_SDK_ROOT/cmdline-tools"
          curl -fsSL "https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip" -o cmdline-tools.zip
          unzip -q cmdline-tools.zip
          rm cmdline-tools.zip
          # move to latest layout expected by sdkmanager
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools/latest"
          mv cmdline-tools/* "$ANDROID_SDK_ROOT/cmdline-tools/latest/" || true

      - name: Add sdkmanager to PATH
        run: |
          echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/emulator" >> $GITHUB_PATH

      - name: Install Android SDK packages
        run: |
          yes | sdkmanager --sdk_root="$ANDROID_SDK_ROOT" --licenses || true
          sdkmanager --sdk_root="$ANDROID_SDK_ROOT" "platform-tools" "emulator" "platforms;android-33" "build-tools;33.0.2" "system-images;android-33;google_apis;x86_64"

      - name: Print Java & Android info
        run: |
          java -version
          ./gradlew -v
          sdkmanager --version
          adb --version || true

      - name: Prepare local.properties from defaults if missing
        run: |
          if [ -f secrets.defaults.properties ]; then
            cp secrets.defaults.properties local.properties || true
          else
            echo "secrets.defaults.properties not found; ensure local.properties is present if build needs secrets"
          fi

      - name: Clean and assemble debug APKs
        run: |
          ./gradlew clean assembleFdroidDebug assembleGoogleDebug --no-daemon --stacktrace

      - name: Upload APKs as artifact
        uses: actions/upload-artifact@v4
        with:
          name: apks
          path: |
            app/build/outputs/apk/**/*.apk
